upstream gunicorn {
  server 127.0.0.1:8001;
}

server {
  listen 80;
  server_name {{ nginx.domain }};

  location /.well-known/acme-challenge/ {
    root /usr/share/nginx/html/;
  }

  location / {
  return 301 https://$server_name$request_uri;
  }
}


server {
  listen 443 ssl http2;
  server_name {{ nginx.domain }};
  ssl_certificate /etc/letsencrypt/live/{{ nginx.domain }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ nginx.domain }}/privkey.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  ssl_session_tickets off;
  ssl_dhparam /etc/ssl/private/dhparam.pem;

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
  ssl_prefer_server_ciphers on;


  add_header Strict-Transport-Security max-age=15768000;

  charset utf-8;
  client_max_body_size 512m;
  access_log {{ nginx.access_log }};
  error_log {{ nginx.error_log }};

  if ($http_user_agent ~* (DirBuster|Yandex|StackRambler|libwww-perl|Python-urllib|libcurl|msnbot|Python-httplib2|aria2) ) {
    return 301 http://msn.com;
  }

  location /robots.txt {
    return 200 "User-agent: *\nDisallow: /";
  }

  set $static_root "{{ nginx.static_root }}";

  location /static/ {
    alias $static_root/staticfiles/;
  }

  location /media/ {
    alias $static_root/media/;

}

  location / {
    proxy_pass         http://gunicorn;
    proxy_redirect     off;
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_set_header   X-Forwarded-Proto $scheme;
  }
}
