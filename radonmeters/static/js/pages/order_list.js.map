{"version":3,"sources":["pages/order_list.js"],"names":["$","Vue","component","window","VueBootstrapDatetimePicker","default","props","mounted","vm","this","$el","select2","data","options","minimumResultsForSearch","width","placeholder","$attrs","val","value","trigger","on","$emit","watch","empty","destroyed","off","model","prop","event","inputVal","minChars","source","term","suggest","xhr","abort","e","getJSON","q","renderItem","item","search","replace","cache","re","RegExp","split","join","id","name","onSelect","destroy","delimiters","enableEdit","is_active","date_start","date_end","dispFormat","initFormat","datePickerConfigStart","format","dayViewHeaderFormat","useCurrent","datePickerConfigEnd","selected","methods","submitForm","formData","that","isValid","measurement_start_date","measurement_end_date","floor","location","success","error","isBlankFields","errors","handlerEdit","$refs","end_date","push","start_date","_utils","renderMessages","length","toLowerCase","location_id","status","changeEndField","moment","isSameOrAfter","a","c","minDate","clear","created","isNumber","_data","defaultProducts","dosimeters","dosimetersListIsOpened","isFetch","handlerToggleProductList","order","isOpened","handlerToggleDosimeters","generate_dosimeter_report_url","then","catch","ajaxRequest","url","res","detail","orderList","products","defaults","orders_url","getData","isDisabled","orders","to","ajax","method","get_url","concat","results","map","indx","showLoader","setTimeout","next_page","next","emitter","forEach","clearTimeout","openOrder","$children","loadMore","jQuery"],"mappings":"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","file":"order_list.js","sourcesContent":["(($, Vue) => {\n    'use strict';\n\n    Vue.component('date-picker', window.VueBootstrapDatetimePicker.default);\n\n    Vue.component('select2', {\n        props: ['options', 'value'],\n        template: `<select>\n                        <slot></slot>\n                    </select>`,\n        mounted: function() {\n            var vm = this;\n            $(this.$el)\n                // init select2\n                .select2({\n                    data: this.options,\n                    minimumResultsForSearch: -1,\n                    width: '100%',\n                    placeholder: this.$attrs.placeholder\n                })\n                .val(this.value)\n                .trigger('change')\n                // emit event on change.\n                .on('change', function() {\n                    vm.$emit('input', this.value);\n                });\n        },\n        watch: {\n            value: function(value) {\n                // update value\n                $(this.$el).val(value).trigger('change');\n            },\n            options: function(options) {\n                // update options\n                $(this.$el).empty().select2({ data: options,\n                minimumResultsForSearch: -1,\n                width: '100%',\n                placeholder: this.$attrs.placeholder\n            });\n            }\n        },\n        destroyed: function() {\n            $(this.$el).off().select2('destroy');\n        }\n    });\n\n    let xhr;\n    Vue.component('autocomplete', {\n        model: {\n            prop: 'value',\n            event: 'change'\n        },\n        props: ['value', 'placeholder', 'disabled'],\n        data() {\n            return { inputVal: this.value }\n        },\n        template: `<input v-model=\"inputVal\" :placeholder=\"placeholder\" :disabled=\"disabled\" class=\"form-control\">`,\n        mounted: function() {\n            var vm = this;\n            $(this.$el).autoComplete({\n                minChars: 1,\n                source: function(term, suggest) {\n                    try { xhr.abort(); } catch(e){}\n                    xhr = $.getJSON('/api/v1/locations/', { \n                        q: term \n                    }, function (data) { suggest(data.results) });\n                },\n                cache: false,\n                renderItem: function (item, search){\n                    search = search.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n                    var re = new RegExp(\"(\" + search.split(' ').join('|') + \")\", \"gi\");\n                    var html = '<div class=\"autocomplete-suggestion\" data-id=\"'+ item.id +'\" data-val=\"' + item.name + '\">' + \n                        item.name.replace(re, \"<b>$1</b>\") + \n                    '</div>';\n        \n                    return html\n                },\n                onSelect(event, term, item) {\n                    vm.inputVal = term\n                }\n            });\n        },\n        watch: {\n            inputVal(val) {\n                this.$emit('change', val);\n            }\n        },\n        destroyed: function() {\n            $(this.$el).destroy && $(this.$el).destroy();\n        }\n    });\n\n    ////////////////////////////////////////////////////\n    /// Product item(dosimeter)\n    ////////////////////////////////////////////////////\n    Vue.component('dosimeters',{\n        template: '#dosimeters_product_row',\n\n        props: ['item'],\n        delimiters: ['<%', '%>'],\n        data: function () {\n            return {\n                enableEdit: false,\n                is_active: true,\n                date_start: null,\n                date_end: null,\n                dispFormat: 'DD-MM-YYYY',\n                initFormat: 'DD-MM-YYYY',\n                floors: 5,\n\n                datePickerConfigStart: {\n                    format: 'DD-MM-YYYY',\n                    dayViewHeaderFormat: 'MMMM YYYY',\n                    useCurrent: true,\n                    ignoreReadonly: true,\n                },\n                datePickerConfigEnd: {\n                    format: 'DD-MM-YYYY',\n                    dayViewHeaderFormat: 'MMMM YYYY',\n                    ignoreReadonly: true,\n                },\n                selected: null,\n                options: [],\n                location: ''\n            };\n        },\n\n        methods: {\n            submitForm: function () {\n                let formData = {\n                    csrf_token: $('#order-list > input').val()\n                };\n                let that = this;\n\n                $('#messages').empty();\n\n                \n                that.item.is_active = that.is_active;\n                formData.is_active = that.is_active;\n\n                if(that.date_start && that.date_start.isValid() && (that.item.measurement_start_date != that.date_start.format(that.initFormat))){\n                    that.item.measurement_start_date = that.date_start.format(that.initFormat);\n                    formData.measurement_start_date = that.date_start.format(that.initFormat);\n                }\n\n                if(that.date_end && that.date_end.isValid() && (that.item.measurement_end_date != that.date_end.format(that.initFormat))){\n                    that.item.measurement_end_date = that.date_end.format(that.initFormat);\n                    formData.measurement_end_date = that.date_end.format(that.initFormat);\n                }\n\n                if(!that.selected || (that.item.floor != that.selected)){\n                    that.item.floor = that.selected;\n                    formData.floor = that.selected;\n                }\n\n\n                if(that.item.location != that.location){\n                    that.item.location = that.location || null;\n                    formData.location = that.location || null;\n                }\n\n\n                /*if(that.isBlankFields()) {\n                    return;\n                }*/\n\n                $.ajax(that.item.url, {\n                    method: 'PATCH',\n                    data: formData,\n                    success: (data) => {\n                        that.enableEdit = false;\n                    },\n                    error: () => {\n\n                    }\n                });\n\n            },\n\n            isBlankFields: function () {\n                let errors = [];\n                if(!this.date_start || !this.date_start.isValid()) {\n                    errors.push($(this.$refs.start_date.$el).data('name'));\n                }\n\n                if(!this.date_end || !this.date_end.isValid()) {\n                    errors.push($(this.$refs.end_date.$el).data('name'));\n                }\n\n                if(errors.length) {\n                    _utils.renderMessages('danger', errors.join(', ').toLowerCase());\n                    return true;\n                }\n            },\n            handlerEdit: function () {\n                if(this.item.status.value === 'on_store_side') {\n                    return;\n                }\n                this.enableEdit = true;\n            },\n            location_id: function () {\n                return 'location' + this.item.pk;\n            },\n            changeEndField: function(a,c) {\n                $(this.$refs.end_date.$el).data(\"DateTimePicker\").minDate(moment(this.date_start));\n\n                if(moment(this.date_start).isSameOrAfter(this.date_end)) {\n                    $(this.$refs.end_date.$el).data(\"DateTimePicker\").clear();\n                }\n\n            }\n        },\n\n        created: function () {\n            this.is_active = this.item.is_active;\n            this.selected = _utils.isNumber(this.item.floor) ? this.item.floor : null;\n            this.date_start = moment(this.item.measurement_start_date, this.initFormat);\n            this.date_end = moment(this.item.measurement_end_date, this.initFormat);\n            if(this.item.location) {\n                this.location = this.item.location;\n            }\n        }\n    });\n\n     ////////////////////////////////////////////////////\n    /// Product item(default)\n    ////////////////////////////////////////////////////\n    Vue.component('default-product',{\n        template: '#default_product_row',\n\n        props: ['item'],\n        delimiters: ['<%', '%>'],\n        data: function () {\n            return {\n                _data: ''\n            };\n        },\n\n        created: function () {\n            this._data = this.item;\n        }\n    });\n\n    ////////////////////////////////////////////////////\n    /// Order item\n    ////////////////////////////////////////////////////\n    Vue.component('order-item',{\n        template: '#order-row',\n        props: ['order'],\n        delimiters: ['<%', '%>'],\n        data: function () {\n            return {\n                defaultProducts: [],\n                dosimeters: [],\n                dosimetersListIsOpened: false,\n                isFetch: false\n            };\n        },\n\n        methods: {\n            handlerToggleProductList: function () {\n                if(this.defaultProducts.length === 0 && this.dosimeters.length === 0 ) {\n                    return;\n                }\n\n                this.dosimetersListIsOpened = false;\n\n                if(this.order.isOpened) {\n                    this.$emit('close', this);\n                    return;\n                }\n\n                this.$emit('open', this);\n            },\n            handlerToggleDosimeters: function () {\n                this.dosimetersListIsOpened = !this.dosimetersListIsOpened;\n            },\n            checkForReport: function () {\n                let that = this;\n                that.isFetch = true;\n                let url = that.order.generate_dosimeter_report_url;\n                _utils.ajaxRequest(url, 'GET')\n                .then(res => {\n                    _utils.renderMessages('warning', res.detail);\n                    that.isFetch = false;\n                })\n                .catch(res => {\n                    window.location = url;\n                    that.isFetch = false;\n                });\n            }\n        },\n\n        created: function () {\n            this.defaultProducts = this.order.products.defaults;\n            this.dosimeters = this.order.products.dosimeters;\n        }\n    });\n\n    ////////////////////////////////////////////////////\n    /// Main vm\n    ////////////////////////////////////////////////////\n    const orderList = new Vue({\n        el: '#order-list',\n\n        data: {\n            showLoader: true,\n            isEmpty: false,\n            next_page: null,\n            isDisabled: false,\n            orders: [],\n            orders_url: $('#order-list').data('url')\n        },\n\n        delimiters: ['<%', '%>'],\n        methods:  {\n            getData: function (url) {\n                let that = this;\n                let get_url = url ? url : that.orders_url;\n                let to;\n\n                this.showLoader = true;\n                this.isDisabled = true;\n\n                $.ajax(get_url, {\n                    method: 'GET',\n                    success: (data) => {\n                        that.orders = that.orders.concat(data.results.map(function (item, indx) {\n                            if(!url && indx === 0) {\n                                item.isOpened = true;\n                            } else {\n                                item.isOpened = false;\n                            }\n\n                            return item;\n                        }));\n\n                        to = setTimeout(function() {\n                            that.next_page = data.next;\n                            that.showLoader = false;\n                            that.isDisabled = false;\n                            if(that.orders.length === 0) {\n                                that.isEmpty = true;\n                            }\n                            clearTimeout(to);\n                        }, 300);\n\n                    }\n                });\n\n            },\n            openOrder: function (emitter) {\n                this.$children.forEach(function (item) {\n                    item.order.isOpened = false;\n                });\n                emitter.order.isOpened = true;\n            },\n            closeOrder: function (emitter) {\n                emitter.order.isOpened = false;\n            },\n            loadMore: function () {\n                this.getData(this.next_page);\n            }\n        }\n\n    });\n\n    orderList.getData();\n\n})(jQuery, window.Vue);"]}