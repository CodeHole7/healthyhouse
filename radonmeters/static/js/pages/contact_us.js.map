{"version":3,"sources":["pages/contact_us.js"],"names":["$","$form","$confirmBtn","find","formValid","window","_radonOptions","requiredError","invalidEmailError","valid","validateForm","field","removeClass","remove","value","not","each","val","this","attr","parents","addClass","append","_utils","is","validateEmail","sendToZendesk","submit_to_server","formSubmited","data","request","requester","name","email","local_id","locale_id","subject","comment","body","via","url","zendesk_request_api","success","error","prop","always","onsubmit","submit","e","grecaptcha","getResponse","blur","preventDefault","disabled","autosize","jQuery"],"mappings":"cAAA,SAAEA,GACE,IAAAC,EAAAD,EAAA,oBAGIE,EAAcD,EAAME,KAAK,yBADzBF,GAAU,EAEVG,EAAYC,OAAhBC,cAAAC,cAGIC,EAAoBH,OAAOC,cAAcE,kBAAzCA,EAAAA,WAGA,IAAIC,GAAQ,EADVC,OAAAA,EACED,OAAAA,EAsCA,OApCJR,EAAIU,KAAAA,cAGCC,YAAY,aADjBX,KAAA,4BAGKY,SAELZ,EAAME,KAAK,aAGXF,SAEIA,EAAAE,KAAIW,mBAASC,IAAe,mBAAcC,KAAA,aACtCL,EAAAA,EAAAA,MAAQM,QADCjB,EAAGkB,MAAOC,KAAK,cAKxBV,EAAQT,EAAAkB,MAARE,QAAA,eACHC,SAAA,aAHQC,OAAOtB,EAAEO,IAMdE,GAAIc,GAKHvB,EAAAkB,MAAAM,GAAA,mBAAAV,IACJS,OAAAE,cAAAX,KAjBLd,EAAAkB,MAAAE,QAAA,eAaiBC,SAAS,aAO1BC,OAAAtB,EAAAQ,IAjCJC,GAAA,MAuCQA,GAGQiB,EAAA,SAAAzB,EAASA,EAAW0B,GACpB,IAAAC,GAAA,EAHSC,GAKbC,SACAC,WACIC,KAAQ/B,EAAME,KAAK,YAAAc,MARhBgB,MAAAhC,EAAAE,KAAA,aAAAc,MAUPiB,SAAO7B,OAAAC,cAAA6B,WAAAC,QAAA,yBAAAnC,EAAAE,KAAA,YAAAc,MAVAoB,SADfC,KAAArC,EAAAE,KAAA,eAAAc,OAiBOsB,KACElC,QAAOC,SAKRsB,EAAAA,MACHY,IAPEnC,OAAAC,cAAAmC,oBAQHC,KAAAA,OACInB,KAAAA,EALJoB,MAAO,SAACd,GAOJ5B,EAAG0B,SAAoBC,GAAA,GAH3Bc,QAAS,SAACb,GAKN5B,OAAME,eAAK,UAAXE,OAAkCC,cAAmBS,cAEjDb,IAFJD,EAAME,KAAK,mBAAmBY,IAAI,mBAAmBA,IAAI,yBAAyBE,IAAI,IAKtFb,WAAAA,WACHF,EAAA0C,KAAA,YAAA,IAEG,KAEA3C,GAAA,MA1CZ4C,OAAA,WAyCWlB,IAAqBC,GAOvBkB,EAATC,YAMQ9C,EAAA,GAAA6C,SAAA,SAAAE,GACH,OAFDC,WAEOC,gBAIChD,IAGIwB,EAAAA,iBACAxB,EAAiB0C,KAAA,cAExB1C,EAAAiD,OACMzC,MACVN,GAAA,EAnBLsB,EAAAzB,EAAAC,EAAAD,EAAA4B,KAAA,qBAegB3B,EAAY0C,KAAK,YAAY,MAG9B,IAVPI,EAAEI,kBACEC,IAaZC,SAASrD,EAAME,KAAK,aApHxB,CAsHGoD","file":"contact_us.js","sourcesContent":["(($) => {\n    'use strict';\n\n    let $form = $('#contact-us-form');\n    let $confirmBtn = $form.find('button[type=\"submit\"]');\n    let formValid = false;\n\n    let requiredError = window._radonOptions.requiredError;\n    let invalidEmailError = window._radonOptions.invalidEmailError;\n\n    const validateForm = () => {\n        let valid = true;\n        let value;\n        let field;\n\n        $form.find('.has-error')\n            .removeClass('has-error')\n            .find('.errorlist, .error-block')\n            .remove();\n\n        $form.find('.nonfield')\n            .remove();\n\n        $form.find('input, textarea').not('[type=\"hidden\"]').each(function() {\n            value = $( this ).val();\n            if(!value && $( this ).attr('required') ) {\n                field = $( this ).parents('.form-group')\n                    .addClass('has-error')\n                    .append($(requiredError));\n\n                valid = false;\n            }\n\n            if($( this ).is( `[type=\"email\"]` ) && value) {\n                if(!_utils.validateEmail( value )) {\n                    $( this ).parents('.form-group')\n                        .addClass('has-error')\n                        .append($(invalidEmailError));\n                    valid = false;\n                }\n            }\n        });\n\n        return valid;\n    };\n\n    const sendToZendesk = ($form, $confirmBtn, submit_to_server) => {\n        let formSubmited = false;\n        let data = {\n            \"request\": {\n                \"requester\": {\n                    \"name\": $form.find('#id_name').val(),\n                    \"email\": $form.find('#id_email').val(),\n                    \"local_id\": window._radonOptions.locale_id\n                },\n                \"subject\": `Contact us web form | ${$form.find('#id_name').val()}`,\n                \"comment\": {\n                    \"body\": $form.find('#id_message').val()\n                },\n                \"via\": {\n                    \"channel\": \"web\"\n                }\n            }\n        };\n\n        $.ajax({\n            url: window._radonOptions.zendesk_request_api,\n            type: 'POST',\n            data: data,\n            error: (data) => {\n                $form.submit();\n                formSubmited = true;\n            },\n            success: (data) => {\n                _utils.renderMessages('success', window._radonOptions.success_send);\n\n                if(submit_to_server) { return; }\n\n                $form.find('input, textarea').not('[type=\"hidden\"]').not('#g-recaptcha-response').val('');\n                setTimeout(function() {\n                    $confirmBtn.prop('disabled', false);\n                }, 5000);\n\n                formValid = false\n            }\n        })\n        .always(() => {\n            if(submit_to_server && !formSubmited) {\n                $form.submit();\n            }\n        });\n    };\n\n\n    $form[0].onsubmit = function (e) {\n        if(!grecaptcha.getResponse()) {\n            e.preventDefault();\n            return false\n        }\n        if(formValid) {\n            return true;\n        } else {\n            e.preventDefault();\n            var disabled = $confirmBtn.prop('disabled');\n            if (!disabled) {\n                $confirmBtn.blur();\n                if (validateForm()) {\n                    formValid = true;\n                    sendToZendesk($form, $confirmBtn, $form.data('submit-to-server'));\n                    $confirmBtn.prop('disabled', true);\n                }\n            }\n            return false;\n        }\n    };\n\n    autosize($form.find('textarea'));\n\n})(jQuery);\n"]}